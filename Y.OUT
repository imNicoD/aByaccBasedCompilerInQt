   0  $accept : program $end

   1  $$1 :

   2  program : listdecl $$1 bloqsent

   3  listdecl : decl ';' listdecl
   4           | error ';' listdecl
   5           |

   6  decl : declvar
   7       | FUNCTION BEGIN listdeclvar funcsentlist END
   8       | FUNCTION error

   9  declvar : TYPE listvar
  10          | TYPE error

  11  listdeclvar : declvar ';' listdeclvar
  12              |

  13  funcsentlist : funcsent funcsentlist
  14               |

  15  funcsent : sentencia ';'
  16           | ID ':'

  17  listvar : ID
  18          | ID ',' listvar

  19  bloqsent : BEGIN listsent END
  20           | sentencia

  21  listsent : sentencia ';' listsent
  22           |

  23  sentencia : if

  24  $$2 :

  25  sentencia : LOOP $$2 bloqsent UNTIL cond
  26            | RETURN '(' expr ')'
  27            | PRINT '(' STR ')'
  28            | ID '=' expr
  29            | ID error
  30            | RETURN error
  31            | PRINT '(' error
  32            | PRINT error
  33            |

  34  $$3 :

  35  $$4 :

  36  if : IF pcond $$3 THEN bloqsent $$4 else
  37     | IF pcond error

  38  $$5 :

  39  else : ELSE $$5 bloqsent
  40       |

  41  expr : term
  42       | expr '+' term
  43       | expr '-' term

  44  term : fact
  45       | term '*' fact
  46       | term '/' fact

  47  fact : ID
  48       | CONST
  49       | '-' CONST
  50       | ID '(' ')'
  51       | ID '(' error

  52  pcond : '(' cond ')'
  53        | '(' cond error
  54        | '(' error
  55        | error

  56  cond : expr comparador expr
  57       | expr comparador error

  58  comparador : '<'
  59             | '>'
  60             | LEQ
  61             | GEQ
  62             | NEQ
  63             | EQU

state 0
	$accept : . program $end  (0)
	listdecl : .  (5)

	error  shift 1
	FUNCTION  shift 2
	TYPE  shift 3
	$end  reduce 5
	BEGIN  reduce 5
	RETURN  reduce 5
	PRINT  reduce 5
	IF  reduce 5
	LOOP  reduce 5
	ID  reduce 5

	program  goto 4
	listdecl  goto 5
	decl  goto 6
	declvar  goto 7


state 1
	listdecl : error . ';' listdecl  (4)

	';'  shift 8
	.  error


state 2
	decl : FUNCTION . BEGIN listdeclvar funcsentlist END  (7)
	decl : FUNCTION . error  (8)

	error  shift 9
	BEGIN  shift 10
	.  error


state 3
	declvar : TYPE . listvar  (9)
	declvar : TYPE . error  (10)

	error  shift 11
	ID  shift 12
	.  error

	listvar  goto 13


state 4
	$accept : program . $end  (0)

	$end  accept


state 5
	program : listdecl . $$1 bloqsent  (2)
	$$1 : .  (1)

	.  reduce 1

	$$1  goto 14


state 6
	listdecl : decl . ';' listdecl  (3)

	';'  shift 15
	.  error


state 7
	decl : declvar .  (6)

	.  reduce 6


state 8
	listdecl : error ';' . listdecl  (4)
	listdecl : .  (5)

	error  shift 1
	FUNCTION  shift 2
	TYPE  shift 3
	$end  reduce 5
	BEGIN  reduce 5
	RETURN  reduce 5
	PRINT  reduce 5
	IF  reduce 5
	LOOP  reduce 5
	ID  reduce 5

	listdecl  goto 16
	decl  goto 6
	declvar  goto 7


state 9
	decl : FUNCTION error .  (8)

	.  reduce 8


state 10
	decl : FUNCTION BEGIN . listdeclvar funcsentlist END  (7)
	listdeclvar : .  (12)

	TYPE  shift 3
	END  reduce 12
	RETURN  reduce 12
	PRINT  reduce 12
	IF  reduce 12
	LOOP  reduce 12
	ID  reduce 12
	';'  reduce 12

	declvar  goto 17
	listdeclvar  goto 18


state 11
	declvar : TYPE error .  (10)

	.  reduce 10


state 12
	listvar : ID .  (17)
	listvar : ID . ',' listvar  (18)

	','  shift 19
	';'  reduce 17


state 13
	declvar : TYPE listvar .  (9)

	.  reduce 9


state 14
	program : listdecl $$1 . bloqsent  (2)
	sentencia : .  (33)

	BEGIN  shift 20
	RETURN  shift 21
	PRINT  shift 22
	IF  shift 23
	LOOP  shift 24
	ID  shift 25
	$end  reduce 33

	bloqsent  goto 26
	sentencia  goto 27
	if  goto 28


state 15
	listdecl : decl ';' . listdecl  (3)
	listdecl : .  (5)

	error  shift 1
	FUNCTION  shift 2
	TYPE  shift 3
	$end  reduce 5
	BEGIN  reduce 5
	RETURN  reduce 5
	PRINT  reduce 5
	IF  reduce 5
	LOOP  reduce 5
	ID  reduce 5

	listdecl  goto 29
	decl  goto 6
	declvar  goto 7


state 16
	listdecl : error ';' listdecl .  (4)

	.  reduce 4


state 17
	listdeclvar : declvar . ';' listdeclvar  (11)

	';'  shift 30
	.  error


state 18
	decl : FUNCTION BEGIN listdeclvar . funcsentlist END  (7)
	funcsentlist : .  (14)
	sentencia : .  (33)

	RETURN  shift 21
	PRINT  shift 22
	IF  shift 23
	LOOP  shift 24
	ID  shift 31
	END  reduce 14
	';'  reduce 33

	funcsentlist  goto 32
	funcsent  goto 33
	sentencia  goto 34
	if  goto 28


state 19
	listvar : ID ',' . listvar  (18)

	ID  shift 12
	.  error

	listvar  goto 35


state 20
	bloqsent : BEGIN . listsent END  (19)
	listsent : .  (22)
	sentencia : .  (33)

	RETURN  shift 21
	PRINT  shift 22
	IF  shift 23
	LOOP  shift 24
	ID  shift 25
	END  reduce 22
	';'  reduce 33

	sentencia  goto 36
	listsent  goto 37
	if  goto 28


state 21
	sentencia : RETURN . '(' expr ')'  (26)
	sentencia : RETURN . error  (30)

	error  shift 38
	'('  shift 39
	.  error


state 22
	sentencia : PRINT . '(' STR ')'  (27)
	sentencia : PRINT . '(' error  (31)
	sentencia : PRINT . error  (32)

	error  shift 40
	'('  shift 41
	.  error


state 23
	if : IF . pcond $$3 THEN bloqsent $$4 else  (36)
	if : IF . pcond error  (37)

	error  shift 42
	'('  shift 43
	.  error

	pcond  goto 44


state 24
	sentencia : LOOP . $$2 bloqsent UNTIL cond  (25)
	$$2 : .  (24)

	.  reduce 24

	$$2  goto 45


state 25
	sentencia : ID . '=' expr  (28)
	sentencia : ID . error  (29)

	error  shift 46
	'='  shift 47
	.  error


state 26
	program : listdecl $$1 bloqsent .  (2)

	.  reduce 2


state 27
	bloqsent : sentencia .  (20)

	.  reduce 20


state 28
	sentencia : if .  (23)

	.  reduce 23


state 29
	listdecl : decl ';' listdecl .  (3)

	.  reduce 3


state 30
	listdeclvar : declvar ';' . listdeclvar  (11)
	listdeclvar : .  (12)

	TYPE  shift 3
	END  reduce 12
	RETURN  reduce 12
	PRINT  reduce 12
	IF  reduce 12
	LOOP  reduce 12
	ID  reduce 12
	';'  reduce 12

	declvar  goto 17
	listdeclvar  goto 48


state 31
	funcsent : ID . ':'  (16)
	sentencia : ID . '=' expr  (28)
	sentencia : ID . error  (29)

	error  shift 46
	':'  shift 49
	'='  shift 47
	.  error


state 32
	decl : FUNCTION BEGIN listdeclvar funcsentlist . END  (7)

	END  shift 50
	.  error


state 33
	funcsentlist : funcsent . funcsentlist  (13)
	funcsentlist : .  (14)
	sentencia : .  (33)

	RETURN  shift 21
	PRINT  shift 22
	IF  shift 23
	LOOP  shift 24
	ID  shift 31
	END  reduce 14
	';'  reduce 33

	funcsentlist  goto 51
	funcsent  goto 33
	sentencia  goto 34
	if  goto 28


state 34
	funcsent : sentencia . ';'  (15)

	';'  shift 52
	.  error


state 35
	listvar : ID ',' listvar .  (18)

	.  reduce 18


state 36
	listsent : sentencia . ';' listsent  (21)

	';'  shift 53
	.  error


state 37
	bloqsent : BEGIN listsent . END  (19)

	END  shift 54
	.  error


state 38
	sentencia : RETURN error .  (30)

	.  reduce 30


state 39
	sentencia : RETURN '(' . expr ')'  (26)

	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	expr  goto 58
	term  goto 59
	fact  goto 60


state 40
	sentencia : PRINT error .  (32)

	.  reduce 32


state 41
	sentencia : PRINT '(' . STR ')'  (27)
	sentencia : PRINT '(' . error  (31)

	error  shift 61
	STR  shift 62
	.  error


state 42
	pcond : error .  (55)

	.  reduce 55


state 43
	pcond : '(' . cond ')'  (52)
	pcond : '(' . cond error  (53)
	pcond : '(' . error  (54)

	error  shift 63
	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	cond  goto 64
	expr  goto 65
	term  goto 59
	fact  goto 60


state 44
	if : IF pcond . $$3 THEN bloqsent $$4 else  (36)
	if : IF pcond . error  (37)
	$$3 : .  (34)

	error  shift 66
	THEN  reduce 34

	$$3  goto 67


state 45
	sentencia : LOOP $$2 . bloqsent UNTIL cond  (25)
	sentencia : .  (33)

	BEGIN  shift 20
	RETURN  shift 21
	PRINT  shift 22
	IF  shift 23
	LOOP  shift 24
	ID  shift 25
	UNTIL  reduce 33

	bloqsent  goto 68
	sentencia  goto 27
	if  goto 28


state 46
	sentencia : ID error .  (29)

	.  reduce 29


state 47
	sentencia : ID '=' . expr  (28)

	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	expr  goto 69
	term  goto 59
	fact  goto 60


state 48
	listdeclvar : declvar ';' listdeclvar .  (11)

	.  reduce 11


state 49
	funcsent : ID ':' .  (16)

	.  reduce 16


state 50
	decl : FUNCTION BEGIN listdeclvar funcsentlist END .  (7)

	.  reduce 7


state 51
	funcsentlist : funcsent funcsentlist .  (13)

	.  reduce 13


state 52
	funcsent : sentencia ';' .  (15)

	.  reduce 15


state 53
	listsent : sentencia ';' . listsent  (21)
	listsent : .  (22)
	sentencia : .  (33)

	RETURN  shift 21
	PRINT  shift 22
	IF  shift 23
	LOOP  shift 24
	ID  shift 25
	END  reduce 22
	';'  reduce 33

	sentencia  goto 36
	listsent  goto 70
	if  goto 28


state 54
	bloqsent : BEGIN listsent END .  (19)

	.  reduce 19


state 55
	fact : ID .  (47)
	fact : ID . '(' ')'  (50)
	fact : ID . '(' error  (51)

	'('  shift 71
	$end  reduce 47
	error  reduce 47
	ELSE  reduce 47
	UNTIL  reduce 47
	EQU  reduce 47
	NEQ  reduce 47
	GEQ  reduce 47
	LEQ  reduce 47
	';'  reduce 47
	')'  reduce 47
	'+'  reduce 47
	'-'  reduce 47
	'*'  reduce 47
	'/'  reduce 47
	'<'  reduce 47
	'>'  reduce 47


state 56
	fact : CONST .  (48)

	.  reduce 48


state 57
	fact : '-' . CONST  (49)

	CONST  shift 72
	.  error


state 58
	sentencia : RETURN '(' expr . ')'  (26)
	expr : expr . '+' term  (42)
	expr : expr . '-' term  (43)

	')'  shift 73
	'+'  shift 74
	'-'  shift 75
	.  error


state 59
	expr : term .  (41)
	term : term . '*' fact  (45)
	term : term . '/' fact  (46)

	'*'  shift 76
	'/'  shift 77
	$end  reduce 41
	error  reduce 41
	ELSE  reduce 41
	UNTIL  reduce 41
	EQU  reduce 41
	NEQ  reduce 41
	GEQ  reduce 41
	LEQ  reduce 41
	';'  reduce 41
	')'  reduce 41
	'+'  reduce 41
	'-'  reduce 41
	'<'  reduce 41
	'>'  reduce 41


state 60
	term : fact .  (44)

	.  reduce 44


state 61
	sentencia : PRINT '(' error .  (31)

	.  reduce 31


state 62
	sentencia : PRINT '(' STR . ')'  (27)

	')'  shift 78
	.  error


state 63
	pcond : '(' error .  (54)

	.  reduce 54


state 64
	pcond : '(' cond . ')'  (52)
	pcond : '(' cond . error  (53)

	error  shift 79
	')'  shift 80
	.  error


state 65
	expr : expr . '+' term  (42)
	expr : expr . '-' term  (43)
	cond : expr . comparador expr  (56)
	cond : expr . comparador error  (57)

	EQU  shift 81
	NEQ  shift 82
	GEQ  shift 83
	LEQ  shift 84
	'+'  shift 74
	'-'  shift 75
	'<'  shift 85
	'>'  shift 86
	.  error

	comparador  goto 87


state 66
	if : IF pcond error .  (37)

	.  reduce 37


state 67
	if : IF pcond $$3 . THEN bloqsent $$4 else  (36)

	THEN  shift 88
	.  error


state 68
	sentencia : LOOP $$2 bloqsent . UNTIL cond  (25)

	UNTIL  shift 89
	.  error


state 69
	sentencia : ID '=' expr .  (28)
	expr : expr . '+' term  (42)
	expr : expr . '-' term  (43)

	'+'  shift 74
	'-'  shift 75
	$end  reduce 28
	ELSE  reduce 28
	UNTIL  reduce 28
	';'  reduce 28


state 70
	listsent : sentencia ';' listsent .  (21)

	.  reduce 21


state 71
	fact : ID '(' . ')'  (50)
	fact : ID '(' . error  (51)

	error  shift 90
	')'  shift 91
	.  error


state 72
	fact : '-' CONST .  (49)

	.  reduce 49


state 73
	sentencia : RETURN '(' expr ')' .  (26)

	.  reduce 26


state 74
	expr : expr '+' . term  (42)

	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	term  goto 92
	fact  goto 60


state 75
	expr : expr '-' . term  (43)

	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	term  goto 93
	fact  goto 60


state 76
	term : term '*' . fact  (45)

	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	fact  goto 94


state 77
	term : term '/' . fact  (46)

	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	fact  goto 95


state 78
	sentencia : PRINT '(' STR ')' .  (27)

	.  reduce 27


state 79
	pcond : '(' cond error .  (53)

	.  reduce 53


state 80
	pcond : '(' cond ')' .  (52)

	.  reduce 52


state 81
	comparador : EQU .  (63)

	.  reduce 63


state 82
	comparador : NEQ .  (62)

	.  reduce 62


state 83
	comparador : GEQ .  (61)

	.  reduce 61


state 84
	comparador : LEQ .  (60)

	.  reduce 60


state 85
	comparador : '<' .  (58)

	.  reduce 58


state 86
	comparador : '>' .  (59)

	.  reduce 59


state 87
	cond : expr comparador . expr  (56)
	cond : expr comparador . error  (57)

	error  shift 96
	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	expr  goto 97
	term  goto 59
	fact  goto 60


state 88
	if : IF pcond $$3 THEN . bloqsent $$4 else  (36)
	sentencia : .  (33)

	BEGIN  shift 20
	RETURN  shift 21
	PRINT  shift 22
	IF  shift 23
	LOOP  shift 24
	ID  shift 25
	$end  reduce 33
	ELSE  reduce 33
	UNTIL  reduce 33
	';'  reduce 33

	bloqsent  goto 98
	sentencia  goto 27
	if  goto 28


state 89
	sentencia : LOOP $$2 bloqsent UNTIL . cond  (25)

	ID  shift 55
	CONST  shift 56
	'-'  shift 57
	.  error

	cond  goto 99
	expr  goto 65
	term  goto 59
	fact  goto 60


state 90
	fact : ID '(' error .  (51)

	.  reduce 51


state 91
	fact : ID '(' ')' .  (50)

	.  reduce 50


state 92
	expr : expr '+' term .  (42)
	term : term . '*' fact  (45)
	term : term . '/' fact  (46)

	'*'  shift 76
	'/'  shift 77
	$end  reduce 42
	error  reduce 42
	ELSE  reduce 42
	UNTIL  reduce 42
	EQU  reduce 42
	NEQ  reduce 42
	GEQ  reduce 42
	LEQ  reduce 42
	';'  reduce 42
	')'  reduce 42
	'+'  reduce 42
	'-'  reduce 42
	'<'  reduce 42
	'>'  reduce 42


state 93
	expr : expr '-' term .  (43)
	term : term . '*' fact  (45)
	term : term . '/' fact  (46)

	'*'  shift 76
	'/'  shift 77
	$end  reduce 43
	error  reduce 43
	ELSE  reduce 43
	UNTIL  reduce 43
	EQU  reduce 43
	NEQ  reduce 43
	GEQ  reduce 43
	LEQ  reduce 43
	';'  reduce 43
	')'  reduce 43
	'+'  reduce 43
	'-'  reduce 43
	'<'  reduce 43
	'>'  reduce 43


state 94
	term : term '*' fact .  (45)

	.  reduce 45


state 95
	term : term '/' fact .  (46)

	.  reduce 46


state 96
	cond : expr comparador error .  (57)

	.  reduce 57


state 97
	expr : expr . '+' term  (42)
	expr : expr . '-' term  (43)
	cond : expr comparador expr .  (56)

	'+'  shift 74
	'-'  shift 75
	$end  reduce 56
	error  reduce 56
	ELSE  reduce 56
	UNTIL  reduce 56
	';'  reduce 56
	')'  reduce 56


state 98
	if : IF pcond $$3 THEN bloqsent . $$4 else  (36)
	$$4 : .  (35)

	.  reduce 35

	$$4  goto 100


state 99
	sentencia : LOOP $$2 bloqsent UNTIL cond .  (25)

	.  reduce 25


100: shift/reduce conflict (shift 101, reduce 40) on ELSE
state 100
	if : IF pcond $$3 THEN bloqsent $$4 . else  (36)
	else : .  (40)

	ELSE  shift 101
	$end  reduce 40
	UNTIL  reduce 40
	';'  reduce 40

	else  goto 102


state 101
	else : ELSE . $$5 bloqsent  (39)
	$$5 : .  (38)

	.  reduce 38

	$$5  goto 103


state 102
	if : IF pcond $$3 THEN bloqsent $$4 else .  (36)

	.  reduce 36


state 103
	else : ELSE $$5 . bloqsent  (39)
	sentencia : .  (33)

	BEGIN  shift 20
	RETURN  shift 21
	PRINT  shift 22
	IF  shift 23
	LOOP  shift 24
	ID  shift 25
	$end  reduce 33
	ELSE  reduce 33
	UNTIL  reduce 33
	';'  reduce 33

	bloqsent  goto 104
	sentencia  goto 27
	if  goto 28


state 104
	else : ELSE $$5 bloqsent .  (39)

	.  reduce 39


State 100 contains 1 shift/reduce conflict.


32 terminals, 25 nonterminals
64 grammar rules, 105 states
