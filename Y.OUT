   0  $accept : program $end

   1  $$1 :

   2  program : listdecl $$1 bloqsent

   3  listdecl : decl ';' listdecl
   4           | error ';' listdecl
   5           |

   6  decl : declvar

   7  $$2 :

   8  decl : FUNCTION BEGIN $$2 listdeclvar funcsentlist END
   9       | FUNCTION error

  10  declvar : TYPE listvar
  11          | TYPE error

  12  listdeclvar : declvar ';' listdeclvar
  13              |

  14  funcsentlist : funcsent funcsentlist
  15               |

  16  funcsent : sentencia ';'
  17           | ID ':'

  18  listvar : ID
  19          | ID ',' listvar

  20  bloqsent : BEGIN listsent END
  21           | sentencia

  22  listsent : sentencia ';' listsent
  23           |

  24  sentencia : if

  25  $$3 :

  26  sentencia : LOOP $$3 bloqsent UNTIL cond
  27            | RETURN '(' expr ')'
  28            | PRINT '(' STR ')'
  29            | ID '=' expr
  30            | ID error
  31            | RETURN error
  32            | PRINT '(' error
  33            | PRINT error
  34            |

  35  $$4 :

  36  $$5 :

  37  if : IF pcond $$4 THEN bloqsent $$5 else
  38     | IF pcond error

  39  $$6 :

  40  else : ELSE $$6 bloqsent
  41       |

  42  expr : term
  43       | expr '+' term
  44       | expr '-' term

  45  term : fact
  46       | term '*' fact
  47       | term '/' fact

  48  fact : ID
  49       | CONST
  50       | '-' CONST
  51       | ID '(' ')'
  52       | ID '(' error

  53  pcond : '(' cond ')'
  54        | '(' cond error
  55        | '(' error
  56        | error

  57  cond : expr comparador expr
  58       | expr comparador error

  59  comparador : '<'
  60             | '>'
  61             | LEQ
  62             | GEQ
  63             | NEQ
  64             | EQU

state 0
	$accept : . program $end  (0)
	listdecl : .  (5)

	error  shift 1
	FUNCTION  shift 2
	TYPE  shift 3
	$end  reduce 5
	BEGIN  reduce 5
	RETURN  reduce 5
	PRINT  reduce 5
	IF  reduce 5
	LOOP  reduce 5
	ID  reduce 5

	program  goto 4
	listdecl  goto 5
	decl  goto 6
	declvar  goto 7


state 1
	listdecl : error . ';' listdecl  (4)

	';'  shift 8
	.  error


state 2
	decl : FUNCTION . BEGIN $$2 listdeclvar funcsentlist END  (8)
	decl : FUNCTION . error  (9)

	error  shift 9
	BEGIN  shift 10
	.  error


state 3
	declvar : TYPE . listvar  (10)
	declvar : TYPE . error  (11)

	error  shift 11
	ID  shift 12
	.  error

	listvar  goto 13


state 4
	$accept : program . $end  (0)

	$end  accept


state 5
	program : listdecl . $$1 bloqsent  (2)
	$$1 : .  (1)

	.  reduce 1

	$$1  goto 14


state 6
	listdecl : decl . ';' listdecl  (3)

	';'  shift 15
	.  error


state 7
	decl : declvar .  (6)

	.  reduce 6


state 8
	listdecl : error ';' . listdecl  (4)
	listdecl : .  (5)

	error  shift 1
	FUNCTION  shift 2
	TYPE  shift 3
	$end  reduce 5
	BEGIN  reduce 5
	RETURN  reduce 5
	PRINT  reduce 5
	IF  reduce 5
	LOOP  reduce 5
	ID  reduce 5

	listdecl  goto 16
	decl  goto 6
	declvar  goto 7


state 9
	decl : FUNCTION error .  (9)

	.  reduce 9


state 10
	decl : FUNCTION BEGIN . $$2 listdeclvar funcsentlist END  (8)
	$$2 : .  (7)

	.  reduce 7

	$$2  goto 17


state 11
	declvar : TYPE error .  (11)

	.  reduce 11


state 12
	listvar : ID .  (18)
	listvar : ID . ',' listvar  (19)

	','  shift 18
	';'  reduce 18


state 13
	declvar : TYPE listvar .  (10)

	.  reduce 10


state 14
	program : listdecl $$1 . bloqsent  (2)
	sentencia : .  (34)

	BEGIN  shift 19
	RETURN  shift 20
	PRINT  shift 21
	IF  shift 22
	LOOP  shift 23
	ID  shift 24
	$end  reduce 34

	bloqsent  goto 25
	sentencia  goto 26
	if  goto 27


state 15
	listdecl : decl ';' . listdecl  (3)
	listdecl : .  (5)

	error  shift 1
	FUNCTION  shift 2
	TYPE  shift 3
	$end  reduce 5
	BEGIN  reduce 5
	RETURN  reduce 5
	PRINT  reduce 5
	IF  reduce 5
	LOOP  reduce 5
	ID  reduce 5

	listdecl  goto 28
	decl  goto 6
	declvar  goto 7


state 16
	listdecl : error ';' listdecl .  (4)

	.  reduce 4


state 17
	decl : FUNCTION BEGIN $$2 . listdeclvar funcsentlist END  (8)
	listdeclvar : .  (13)

	TYPE  shift 3
	END  reduce 13
	RETURN  reduce 13
	PRINT  reduce 13
	IF  reduce 13
	LOOP  reduce 13
	ID  reduce 13
	';'  reduce 13

	declvar  goto 29
	listdeclvar  goto 30


state 18
	listvar : ID ',' . listvar  (19)

	ID  shift 12
	.  error

	listvar  goto 31


state 19
	bloqsent : BEGIN . listsent END  (20)
	listsent : .  (23)
	sentencia : .  (34)

	RETURN  shift 20
	PRINT  shift 21
	IF  shift 22
	LOOP  shift 23
	ID  shift 24
	END  reduce 23
	';'  reduce 34

	sentencia  goto 32
	listsent  goto 33
	if  goto 27


state 20
	sentencia : RETURN . '(' expr ')'  (27)
	sentencia : RETURN . error  (31)

	error  shift 34
	'('  shift 35
	.  error


state 21
	sentencia : PRINT . '(' STR ')'  (28)
	sentencia : PRINT . '(' error  (32)
	sentencia : PRINT . error  (33)

	error  shift 36
	'('  shift 37
	.  error


state 22
	if : IF . pcond $$4 THEN bloqsent $$5 else  (37)
	if : IF . pcond error  (38)

	error  shift 38
	'('  shift 39
	.  error

	pcond  goto 40


state 23
	sentencia : LOOP . $$3 bloqsent UNTIL cond  (26)
	$$3 : .  (25)

	.  reduce 25

	$$3  goto 41


state 24
	sentencia : ID . '=' expr  (29)
	sentencia : ID . error  (30)

	error  shift 42
	'='  shift 43
	.  error


state 25
	program : listdecl $$1 bloqsent .  (2)

	.  reduce 2


state 26
	bloqsent : sentencia .  (21)

	.  reduce 21


state 27
	sentencia : if .  (24)

	.  reduce 24


state 28
	listdecl : decl ';' listdecl .  (3)

	.  reduce 3


state 29
	listdeclvar : declvar . ';' listdeclvar  (12)

	';'  shift 44
	.  error


state 30
	decl : FUNCTION BEGIN $$2 listdeclvar . funcsentlist END  (8)
	funcsentlist : .  (15)
	sentencia : .  (34)

	RETURN  shift 20
	PRINT  shift 21
	IF  shift 22
	LOOP  shift 23
	ID  shift 45
	END  reduce 15
	';'  reduce 34

	funcsentlist  goto 46
	funcsent  goto 47
	sentencia  goto 48
	if  goto 27


state 31
	listvar : ID ',' listvar .  (19)

	.  reduce 19


state 32
	listsent : sentencia . ';' listsent  (22)

	';'  shift 49
	.  error


state 33
	bloqsent : BEGIN listsent . END  (20)

	END  shift 50
	.  error


state 34
	sentencia : RETURN error .  (31)

	.  reduce 31


state 35
	sentencia : RETURN '(' . expr ')'  (27)

	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	expr  goto 54
	term  goto 55
	fact  goto 56


state 36
	sentencia : PRINT error .  (33)

	.  reduce 33


state 37
	sentencia : PRINT '(' . STR ')'  (28)
	sentencia : PRINT '(' . error  (32)

	error  shift 57
	STR  shift 58
	.  error


state 38
	pcond : error .  (56)

	.  reduce 56


state 39
	pcond : '(' . cond ')'  (53)
	pcond : '(' . cond error  (54)
	pcond : '(' . error  (55)

	error  shift 59
	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	cond  goto 60
	expr  goto 61
	term  goto 55
	fact  goto 56


state 40
	if : IF pcond . $$4 THEN bloqsent $$5 else  (37)
	if : IF pcond . error  (38)
	$$4 : .  (35)

	error  shift 62
	THEN  reduce 35

	$$4  goto 63


state 41
	sentencia : LOOP $$3 . bloqsent UNTIL cond  (26)
	sentencia : .  (34)

	BEGIN  shift 19
	RETURN  shift 20
	PRINT  shift 21
	IF  shift 22
	LOOP  shift 23
	ID  shift 24
	UNTIL  reduce 34

	bloqsent  goto 64
	sentencia  goto 26
	if  goto 27


state 42
	sentencia : ID error .  (30)

	.  reduce 30


state 43
	sentencia : ID '=' . expr  (29)

	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	expr  goto 65
	term  goto 55
	fact  goto 56


state 44
	listdeclvar : declvar ';' . listdeclvar  (12)
	listdeclvar : .  (13)

	TYPE  shift 3
	END  reduce 13
	RETURN  reduce 13
	PRINT  reduce 13
	IF  reduce 13
	LOOP  reduce 13
	ID  reduce 13
	';'  reduce 13

	declvar  goto 29
	listdeclvar  goto 66


state 45
	funcsent : ID . ':'  (17)
	sentencia : ID . '=' expr  (29)
	sentencia : ID . error  (30)

	error  shift 42
	':'  shift 67
	'='  shift 43
	.  error


state 46
	decl : FUNCTION BEGIN $$2 listdeclvar funcsentlist . END  (8)

	END  shift 68
	.  error


state 47
	funcsentlist : funcsent . funcsentlist  (14)
	funcsentlist : .  (15)
	sentencia : .  (34)

	RETURN  shift 20
	PRINT  shift 21
	IF  shift 22
	LOOP  shift 23
	ID  shift 45
	END  reduce 15
	';'  reduce 34

	funcsentlist  goto 69
	funcsent  goto 47
	sentencia  goto 48
	if  goto 27


state 48
	funcsent : sentencia . ';'  (16)

	';'  shift 70
	.  error


state 49
	listsent : sentencia ';' . listsent  (22)
	listsent : .  (23)
	sentencia : .  (34)

	RETURN  shift 20
	PRINT  shift 21
	IF  shift 22
	LOOP  shift 23
	ID  shift 24
	END  reduce 23
	';'  reduce 34

	sentencia  goto 32
	listsent  goto 71
	if  goto 27


state 50
	bloqsent : BEGIN listsent END .  (20)

	.  reduce 20


state 51
	fact : ID .  (48)
	fact : ID . '(' ')'  (51)
	fact : ID . '(' error  (52)

	'('  shift 72
	$end  reduce 48
	error  reduce 48
	ELSE  reduce 48
	UNTIL  reduce 48
	EQU  reduce 48
	NEQ  reduce 48
	GEQ  reduce 48
	LEQ  reduce 48
	';'  reduce 48
	')'  reduce 48
	'+'  reduce 48
	'-'  reduce 48
	'*'  reduce 48
	'/'  reduce 48
	'<'  reduce 48
	'>'  reduce 48


state 52
	fact : CONST .  (49)

	.  reduce 49


state 53
	fact : '-' . CONST  (50)

	CONST  shift 73
	.  error


state 54
	sentencia : RETURN '(' expr . ')'  (27)
	expr : expr . '+' term  (43)
	expr : expr . '-' term  (44)

	')'  shift 74
	'+'  shift 75
	'-'  shift 76
	.  error


state 55
	expr : term .  (42)
	term : term . '*' fact  (46)
	term : term . '/' fact  (47)

	'*'  shift 77
	'/'  shift 78
	$end  reduce 42
	error  reduce 42
	ELSE  reduce 42
	UNTIL  reduce 42
	EQU  reduce 42
	NEQ  reduce 42
	GEQ  reduce 42
	LEQ  reduce 42
	';'  reduce 42
	')'  reduce 42
	'+'  reduce 42
	'-'  reduce 42
	'<'  reduce 42
	'>'  reduce 42


state 56
	term : fact .  (45)

	.  reduce 45


state 57
	sentencia : PRINT '(' error .  (32)

	.  reduce 32


state 58
	sentencia : PRINT '(' STR . ')'  (28)

	')'  shift 79
	.  error


state 59
	pcond : '(' error .  (55)

	.  reduce 55


state 60
	pcond : '(' cond . ')'  (53)
	pcond : '(' cond . error  (54)

	error  shift 80
	')'  shift 81
	.  error


state 61
	expr : expr . '+' term  (43)
	expr : expr . '-' term  (44)
	cond : expr . comparador expr  (57)
	cond : expr . comparador error  (58)

	EQU  shift 82
	NEQ  shift 83
	GEQ  shift 84
	LEQ  shift 85
	'+'  shift 75
	'-'  shift 76
	'<'  shift 86
	'>'  shift 87
	.  error

	comparador  goto 88


state 62
	if : IF pcond error .  (38)

	.  reduce 38


state 63
	if : IF pcond $$4 . THEN bloqsent $$5 else  (37)

	THEN  shift 89
	.  error


state 64
	sentencia : LOOP $$3 bloqsent . UNTIL cond  (26)

	UNTIL  shift 90
	.  error


state 65
	sentencia : ID '=' expr .  (29)
	expr : expr . '+' term  (43)
	expr : expr . '-' term  (44)

	'+'  shift 75
	'-'  shift 76
	$end  reduce 29
	ELSE  reduce 29
	UNTIL  reduce 29
	';'  reduce 29


state 66
	listdeclvar : declvar ';' listdeclvar .  (12)

	.  reduce 12


state 67
	funcsent : ID ':' .  (17)

	.  reduce 17


state 68
	decl : FUNCTION BEGIN $$2 listdeclvar funcsentlist END .  (8)

	.  reduce 8


state 69
	funcsentlist : funcsent funcsentlist .  (14)

	.  reduce 14


state 70
	funcsent : sentencia ';' .  (16)

	.  reduce 16


state 71
	listsent : sentencia ';' listsent .  (22)

	.  reduce 22


state 72
	fact : ID '(' . ')'  (51)
	fact : ID '(' . error  (52)

	error  shift 91
	')'  shift 92
	.  error


state 73
	fact : '-' CONST .  (50)

	.  reduce 50


state 74
	sentencia : RETURN '(' expr ')' .  (27)

	.  reduce 27


state 75
	expr : expr '+' . term  (43)

	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	term  goto 93
	fact  goto 56


state 76
	expr : expr '-' . term  (44)

	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	term  goto 94
	fact  goto 56


state 77
	term : term '*' . fact  (46)

	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	fact  goto 95


state 78
	term : term '/' . fact  (47)

	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	fact  goto 96


state 79
	sentencia : PRINT '(' STR ')' .  (28)

	.  reduce 28


state 80
	pcond : '(' cond error .  (54)

	.  reduce 54


state 81
	pcond : '(' cond ')' .  (53)

	.  reduce 53


state 82
	comparador : EQU .  (64)

	.  reduce 64


state 83
	comparador : NEQ .  (63)

	.  reduce 63


state 84
	comparador : GEQ .  (62)

	.  reduce 62


state 85
	comparador : LEQ .  (61)

	.  reduce 61


state 86
	comparador : '<' .  (59)

	.  reduce 59


state 87
	comparador : '>' .  (60)

	.  reduce 60


state 88
	cond : expr comparador . expr  (57)
	cond : expr comparador . error  (58)

	error  shift 97
	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	expr  goto 98
	term  goto 55
	fact  goto 56


state 89
	if : IF pcond $$4 THEN . bloqsent $$5 else  (37)
	sentencia : .  (34)

	BEGIN  shift 19
	RETURN  shift 20
	PRINT  shift 21
	IF  shift 22
	LOOP  shift 23
	ID  shift 24
	$end  reduce 34
	ELSE  reduce 34
	UNTIL  reduce 34
	';'  reduce 34

	bloqsent  goto 99
	sentencia  goto 26
	if  goto 27


state 90
	sentencia : LOOP $$3 bloqsent UNTIL . cond  (26)

	ID  shift 51
	CONST  shift 52
	'-'  shift 53
	.  error

	cond  goto 100
	expr  goto 61
	term  goto 55
	fact  goto 56


state 91
	fact : ID '(' error .  (52)

	.  reduce 52


state 92
	fact : ID '(' ')' .  (51)

	.  reduce 51


state 93
	expr : expr '+' term .  (43)
	term : term . '*' fact  (46)
	term : term . '/' fact  (47)

	'*'  shift 77
	'/'  shift 78
	$end  reduce 43
	error  reduce 43
	ELSE  reduce 43
	UNTIL  reduce 43
	EQU  reduce 43
	NEQ  reduce 43
	GEQ  reduce 43
	LEQ  reduce 43
	';'  reduce 43
	')'  reduce 43
	'+'  reduce 43
	'-'  reduce 43
	'<'  reduce 43
	'>'  reduce 43


state 94
	expr : expr '-' term .  (44)
	term : term . '*' fact  (46)
	term : term . '/' fact  (47)

	'*'  shift 77
	'/'  shift 78
	$end  reduce 44
	error  reduce 44
	ELSE  reduce 44
	UNTIL  reduce 44
	EQU  reduce 44
	NEQ  reduce 44
	GEQ  reduce 44
	LEQ  reduce 44
	';'  reduce 44
	')'  reduce 44
	'+'  reduce 44
	'-'  reduce 44
	'<'  reduce 44
	'>'  reduce 44


state 95
	term : term '*' fact .  (46)

	.  reduce 46


state 96
	term : term '/' fact .  (47)

	.  reduce 47


state 97
	cond : expr comparador error .  (58)

	.  reduce 58


state 98
	expr : expr . '+' term  (43)
	expr : expr . '-' term  (44)
	cond : expr comparador expr .  (57)

	'+'  shift 75
	'-'  shift 76
	$end  reduce 57
	error  reduce 57
	ELSE  reduce 57
	UNTIL  reduce 57
	';'  reduce 57
	')'  reduce 57


state 99
	if : IF pcond $$4 THEN bloqsent . $$5 else  (37)
	$$5 : .  (36)

	.  reduce 36

	$$5  goto 101


state 100
	sentencia : LOOP $$3 bloqsent UNTIL cond .  (26)

	.  reduce 26


101: shift/reduce conflict (shift 102, reduce 41) on ELSE
state 101
	if : IF pcond $$4 THEN bloqsent $$5 . else  (37)
	else : .  (41)

	ELSE  shift 102
	$end  reduce 41
	UNTIL  reduce 41
	';'  reduce 41

	else  goto 103


state 102
	else : ELSE . $$6 bloqsent  (40)
	$$6 : .  (39)

	.  reduce 39

	$$6  goto 104


state 103
	if : IF pcond $$4 THEN bloqsent $$5 else .  (37)

	.  reduce 37


state 104
	else : ELSE $$6 . bloqsent  (40)
	sentencia : .  (34)

	BEGIN  shift 19
	RETURN  shift 20
	PRINT  shift 21
	IF  shift 22
	LOOP  shift 23
	ID  shift 24
	$end  reduce 34
	ELSE  reduce 34
	UNTIL  reduce 34
	';'  reduce 34

	bloqsent  goto 105
	sentencia  goto 26
	if  goto 27


state 105
	else : ELSE $$6 bloqsent .  (40)

	.  reduce 40


State 101 contains 1 shift/reduce conflict.


32 terminals, 26 nonterminals
65 grammar rules, 106 states
